Build infrastructure
############ Prerequisites
1) The Terraform CLI (1.2.0+) installed.
2) The AWS CLI installed.
3) AWS account and associated credentials that allow you to create resources.
Create new Access Key and aws Secret Access Key in IAM

############ Configure AWS credentials and region settings to interact with AWS services via the CLI
$ aws configure
$ AWS_ACCESS_KEY_ID=<SET_VALUE>
$ AWS_SECRET_ACCESS_KEY=<SET_VALUE>
$ region=us-east-1

############ Write configuration
$ mkdir learn-terraform-aws-instance
$ cd learn-terraform-aws-instance
$ touch main.tf

Open main.tf in your text editor, paste in the configuration below, and save the file.
Note: See main.tf details in file

############ Initialize the directory
$ terraform init
############ Format and validate the configuration
$ terraform fmt
$ terraform validate
############ Create infrastructure
$ terraform apply
$ terraform apply -var 'bucket_name=jdexampleforbucketw'  ## To use variable
Enter a value: yes
############ Inspect state
$ terraform show
############ Manually Managing State
$ terraform state list
############ Destroy infrastructure
$ terraform destroy



############ Example Code main.tf
----------------------
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.16"
    }
  }

  required_version = ">= 1.2.0"
}

provider "aws" {
  region  = "us-east-1"
}

resource "aws_s3_bucket" "my_bucket" {
  bucket = "buckettotestterraformjdrojas"  # Replace with a globally unique bucket name
  acl    = "private"  # Optional: Default access control list (ACL) for the bucket
}
----------------------

############ Example Code variables.tf
----------------------
variable "bucket_name" {
  description = "Name for bucket"
  type        = string
  default     = "buckettotestterraformjdrojas"
}
----------------------

###### Terraform Block: Contains Terraform settings including the required providers Terraform will use to provision your infrastructure
required_providers: Specifies the providers that Terraform will use for provisioning infrastructure.
{source}: Specifies that the AWS provider should come from the official HashiCorp AWS provider repository.
{version}: This sets the version constraint for the AWS provider. The ~> 4.16 means Terraform should use version 4.16.x (any version in the 4.16 range, but not version 5.x.x or higher).
required_version: This ensures that Terraform version 1.2.0 or higher is used to apply this configuration. It enforces a minimum version of Terraform.

###### Providers: The provider block configures the specified provider, in this case aws
provider "aws" { ... }: This block configures the AWS provider, which is responsible for interacting with AWS services.
{region}: Sets the AWS region where resources will be created.

###### Resources: Use resource blocks to define components of your infrastructure
resource "aws_s3_bucket" "my_bucket" { ... }: This block defines a resource of type aws_s3_bucket.
aws_s3_bucket: Indicates that the resource is an Amazon S3 bucket.
my_bucket": This is the logical name of the resource within the Terraform configuration.
bucket = "buckettotestterraformjdrojas": This is the name of the S3 bucket to be created.
acl = "private": This sets the access control list (ACL) for the bucket. "private" means that only the owner has full access to the bucket, and it is not publicly accessible




